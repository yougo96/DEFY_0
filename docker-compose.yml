services:

  defy-vite:
    build: ./defy-vite
    ports:
      - "5173:5173"
    volumes:
      - "./defy-vite:/app"
      - "/app/node_modules"
    container_name: defy-vite

  defy-vite-build:
    build: ./defy-vite-build
    ports:
      - "81:80"
    # labels: 
    #     - traefik.enable=true
    #     - traefik.http.routers.defy-vite-build.rule=Host(`defy.pradierh.fr`)
    #     - traefik.http.routers.defy-vite-build.entrypoints=websecure
    #     - traefik.http.routers.defy-vite-build.tls=true
    #     - traefik.http.routers.defy-vite-build.tls.certresolver=myresolver
    #     - traefik.http.services.defy-vite-build.loadbalancer.server.port=80
    volumes:
      - "./defy-vite-build:/app"
      - "/app/node_modules"
    container_name: defy-vite-build
    networks: 
      - proxy

  defy-back:
    build: ./defy-back
    ports:
      - "3333:3333"
    # labels:
    #   - traefik.enable=true
    #   - traefik.http.routers.defy-back.rule=Host(`defy.pradierh.fr`) && PathPrefix(`/api`)
    #   - traefik.http.routers.defy-back.entrypoints=websecure
    #   - traefik.http.routers.defy-back.tls=true
    #   - traefik.http.routers.defy-back.tls.certresolver=myresolver
    #   - traefik.http.services.defy-back.loadbalancer.server.port=1993
    volumes:
      - "./defy-back:/app"
      - "/app/node_modules"
    container_name: defy-back
    # depends_on:
    #   - defy-db
    networks: 
      - proxy

  defy-db:
    image: postgres:17
    ports:
      - "5432:5432"
    volumes:
      - ./defy-db-data:/var/lib/postgresql/data
    env_file: ./defy-back/.env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_PORT: ${DB_PORT}
    container_name: defy-db
    networks: 
      - proxy

volumes:
  defy-db-data:


networks:
  proxy:
    external: true